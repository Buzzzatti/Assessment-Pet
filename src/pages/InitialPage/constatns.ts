export const InitialPageContent = [
    {
        title: 'Архитектура фронтенд-приложения',
        link: '/fsd',
        content: [
            'Разбор методологии FSD: что это, зачем она нужна, наименование и предназначение слоев.',
        ],
    },
    {
        title: 'Инициализация проекта',
        link: '/vite',
        content: [
            'Настройка сборщиков Webpack и Vite.js.',
            'Оптимизация конфигурации для эффективной работы.',
        ],
    },
    {
        title: 'Оптимизация и подключение плагинов',
        link: '/plugins',
        content: [
            'Минификация кода.',
            'Разделение бандла на чанки для улучшения загрузки.',
            'Использование React.lazy для динамической загрузки компонентов.',
            'Изучение различий между форматами изображений (PNG, JPEG, WebP) и их влияние на производительность.',
        ],
    },
    {
        title: 'Обработка ошибок на странице',
        link: '/error-boundary',
        content: [
            'Реализация Error Boundary для перехвата и обработки ошибок в React.',
        ],
    },
    {
        title: 'Верстка и CSS',
        link: '/css',
        content: [
            'Псевдоэлементы ::after и ::before: принципы работы, возможные ошибки отображения.',
            'Свойство position: дефолтное значение, привязка к родительским элементам.',
            'Трансформации (translate, rotate, scale) и их влияние на макет.',
            'Наследование свойств (inherit) и его применение.',
            'Селекторы :last-child, :first-child, :nth-child и их использование.',
        ],
    },
    {
        title: 'TypeScript',
        link: '/typescript',
        content: [
            'Изучение дженериков.',
            'Работа с utility types.',
            'Разбор интерфейсов, их наследование и различие между интерфейсами и типами.',
        ],
    },
    {
        title: 'JavaScript и React',
        link: '/js-react',
        content: [
            'Работа с массивами: методы, перебор, наполнение.',
            'Разбор концепции HOC (Higher-Order Component).',
            'Углубленное изучение типизации компонентов, функций и аргументов.',
        ],
    },
];
